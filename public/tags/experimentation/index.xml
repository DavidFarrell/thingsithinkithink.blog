<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Experimentation on thingsithinkithink</title>
    <link>http://localhost:65142/tags/experimentation/</link>
    <description>Recent content in Experimentation on thingsithinkithink</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:65142/tags/experimentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why we need Experiment-based Roadmaps in the AI Product Era</title>
      <link>http://localhost:65142/posts/2025/04-13-why-we-need-experiment-based-roadmaps-in-the-ai-product-era/</link>
      <pubDate>Fri, 11 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:65142/posts/2025/04-13-why-we-need-experiment-based-roadmaps-in-the-ai-product-era/</guid>
      <description>&lt;p&gt;I recently watched a good talk by &lt;a href=&#34;https://www.linkedin.com/in/bryan-bischof/&#34;&gt;Brian Bischoff&lt;/a&gt;, Head of AI at Theory Ventures, on why traditional product roadmaps fail for AI development and how teams should approach building AI capabilities differently. The presentation provided a good mental model for shifting from rigid planning to experimental discovery.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-problem-with-traditional-roadmaps-in-ai&#34;&gt;The Problem with Traditional Roadmaps in AI&lt;/h2&gt;&#xA;&lt;p&gt;Traditional software roadmapping focuses on time estimates for when specific features will be ready for users. Product managers meticulously plan sprints, assign engineers to swim lanes, and establish checkpoints to track progress. When teams fall behind, they reassess, potentially cutting scope or adjusting timelines.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
